.. Generated by https://github.com/TYPO3-Documentation/t3docs-codesnippets 
.. php:namespace::  TYPO3\CMS\Core\Session

.. php:class:: UserSession

   Represents all information about a user's session.
   
   A user session can be bound to a frontend / backend user, or an anonymous session based on session data stored
   in the session backend.
   
   If a session is anonymous, it can be fixated by storing the session in the backend, but only if there
   is data in the session.
   
   if a session is user-bound, it is automatically fixated.
   
   The $isNew flag is meant to show that this user session object was not fetched from the session backend,
   but initialized in the first place by the current request.
   
   The $data argument is to store any arbitrary data valid for the users' session.
   
   A permanent session means that the client is not issued a session-based cookie but a time-based cookie.
   So the server-session survives the session of the browser.

   
   
   .. php:method:: getIdentifier()
   
      Get the user session identifier (the ses_id)
      
      :returntype: string
      
   .. php:method:: getUserId()
   
      Get the user id (ID of the user record to whom the session belongs)
      
      :returntype: int
      
   .. php:method:: getLastUpdated()
   
      Get the timestamp of the last session data update
      
      :returntype: int
      
   .. php:method:: set(string $key, mixed $value)
   
      Set / update a data value for a given key.
      
      Throws an exception if the given key is empty.
      
      :param string $key: The key whose value should be updated
      :param mixed $value: The value or NULL to unset the key
      
   .. php:method:: hasData()
   
      Check whether the session has data
      
      :returntype: bool
      
   .. php:method:: get(string $key)
   
      Return the data for the given key or an NULL if the key does not exist
      
      :param string $key: the key
      
   .. php:method:: getData()
   
      Return the whole session data array.
      
      :returntype: array
      
   .. php:method:: overrideData(array $data)
   
      Override the whole $data. Can be used to e.g. preserve session data
      on login or to remove session data by providing an empty array.
      
      :param array $data: the data
      
   .. php:method:: dataWasUpdated()
   
      Check if session data was already updated
      
      :returntype: bool
      
   .. php:method:: isAnonymous()
   
      Check if the user session is an anonymous one.
      
      This means, the session does not belong to a logged-in user.
      
      :returntype: bool
      
   .. php:method:: getIpLock()
   
      Return the sessions ipLock state
      
      :returntype: string
      
   .. php:method:: isNew()
   
      Check whether the session was marked as new on creation
      
      :returntype: bool
      
   .. php:method:: isPermanent()
   
      Check whether the session was marked as permanent on creation
      
      :returntype: bool
      
   .. php:method:: needsUpdate()
   
      Use a gracetime-value to avoid updating a session-record too often
      
      :returntype: bool
      
   .. php:method:: createFromRecord(string $id, array $record, bool $markAsNew = false)
   
      Create a new user session based on the provided session record
      
      :param string $id: the session identifier
      :param array $record: the record
      :param bool $markAsNew: the markAsNew, default: false
      :returntype: self
      
   .. php:method:: createNonFixated(string $identifier)
   
      Create a non fixated user session. This means the
      session does not belong to a logged-in user.
      
      :param string $identifier: the identifier
      :returntype: self
      
   .. php:method:: toArray()
   
      Used internally to store data in the backend
      
      :returntype: array
      :returns: The session record as array
